{
  "contractName": "GHCToken",
  "contractAddress": "0xf59212C3aCA5aB43bee6891002611D4082B4AceE",
  "network": "ganache",
  "deployer": "0x9969EcB5247EC3a5810FBFC82084D0301a3C8c98",
  "deploymentTime": "2025-08-30T20:53:30.243Z",
  "abi": [
    "constructor()",
    "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
    "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
    "error ERC721InvalidApprover(address approver)",
    "error ERC721InvalidOperator(address operator)",
    "error ERC721InvalidOwner(address owner)",
    "error ERC721InvalidReceiver(address receiver)",
    "error ERC721InvalidSender(address sender)",
    "error ERC721NonexistentToken(uint256 tokenId)",
    "error OwnableInvalidOwner(address owner)",
    "error OwnableUnauthorizedAccount(address account)",
    "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
    "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
    "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
    "event TokenMinted(uint256 tokenId, address owner, uint256 amount)",
    "event TokenTransferred(uint256 tokenId, address from, address to)",
    "event TransactionRecorded(uint256 transactionId, address from, address to, uint256 amount, string transactionType)",
    "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
    "event UserBanned(address wallet, bool banned)",
    "event UserRegistered(address wallet, string role)",
    "event UserVerified(address wallet, bool verified)",
    "event VerificationApproved(uint256 submissionId, address verifier)",
    "event VerificationRejected(uint256 submissionId, address verifier)",
    "event VerificationSubmitted(uint256 submissionId, address seller)",
    "event VerifierRegistered(address wallet, string organizationName)",
    "function MIN_VOTES_FOR_APPROVAL() view returns (uint256)",
    "function VOTE_DURATION() view returns (uint256)",
    "function addAdmin(address admin)",
    "function admins(address) view returns (bool)",
    "function approve(address to, uint256 tokenId)",
    "function approveVerification(uint256 submissionId, address verifier)",
    "function balanceOf(address owner) view returns (uint256)",
    "function banUser(address wallet, bool banned)",
    "function canVote(address verifier, address voter) view returns (bool)",
    "function getActiveVotingVerifiers() view returns (address[] wallets, string[] organizationNames, string[] emails, uint256[] yesVotes, uint256[] noVotes, uint256[] totalVotes, uint256[] votesNeeded, uint256[] voteEnds)",
    "function getAllVerifiers() view returns (address[] wallets, string[] organizationNames, string[] emails, bool[] active, bool[] banned, bool[] voteStarted, uint256[] yesVotes, uint256[] noVotes)",
    "function getApproved(uint256 tokenId) view returns (address)",
    "function getTokenData(uint256 tokenId) view returns (tuple(uint256 tokenId, address owner, uint256 amount, string[] documents, bool verified, uint256 timestamp, address producer))",
    "function getTransaction(uint256 transactionId) view returns (uint256 id, address from, address to, uint256 amount, string transactionType, uint256 timestamp, bool success, string details)",
    "function getUserData(address wallet) view returns (tuple(address wallet, string role, string[] documents, string country, bool verified, bool banned, string[] badges))",
    "function getUserTransactionCount(address user) view returns (uint256)",
    "function getUserTransactionHistory(address user) view returns (uint256[] transactionIds, address[] fromAddresses, address[] toAddresses, uint256[] amounts, string[] transactionTypes, uint256[] timestamps, bool[] successStatuses, string[] details)",
    "function getVerificationSubmission(uint256 submissionId) view returns (tuple(uint256 id, address seller, uint256 amount, string[] documents, address verifier, bool approved, bool rejected, uint256 timestamp))",
    "function getVerifierData(address verifier) view returns (address wallet, string organizationName, string email, bool active, bool banned, bool voteStarted, uint256 voteStart, uint256 voteEnd, uint256 yesVotes, uint256 noVotes)",
    "function hasVoted(address verifier, address voter) view returns (bool)",
    "function isAdmin(address wallet) view returns (bool)",
    "function isApprovedForAll(address owner, address operator) view returns (bool)",
    "function isVoteStarted(address verifier) view returns (bool)",
    "function name() view returns (string)",
    "function owner() view returns (address)",
    "function ownerOf(uint256 tokenId) view returns (address)",
    "function registerUser(address wallet, string role, string country, string[] documents)",
    "function registerVerifier(address wallet, string organizationName, string email, string[] documents)",
    "function rejectVerification(uint256 submissionId, address verifier)",
    "function renounceOwnership()",
    "function safeTransferFrom(address from, address to, uint256 tokenId)",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
    "function setApprovalForAll(address operator, bool approved)",
    "function startVerifierVote(address verifier)",
    "function submitVerification(uint256 amount, string[] documents) returns (uint256)",
    "function supportsInterface(bytes4 interfaceId) view returns (bool)",
    "function symbol() view returns (string)",
    "function tokenURI(uint256 tokenId) view returns (string)",
    "function tokens(uint256) view returns (uint256 tokenId, address owner, uint256 amount, bool verified, uint256 timestamp, address producer)",
    "function transactions(uint256) view returns (uint256 id, address from, address to, uint256 amount, string transactionType, uint256 timestamp, bool success, string details)",
    "function transferFrom(address from, address to, uint256 tokenId)",
    "function transferOwnership(address newOwner)",
    "function transferToken(uint256 tokenId, address to)",
    "function userTransactions(address, uint256) view returns (uint256)",
    "function users(address) view returns (address wallet, string role, string country, bool verified, bool banned)",
    "function verificationSubmissions(uint256) view returns (uint256 id, address seller, uint256 amount, address verifier, bool approved, bool rejected, uint256 timestamp)",
    "function verifierList(uint256) view returns (address)",
    "function verifiers(address) view returns (address wallet, string organizationName, string email, bool active, bool banned, bool voteStarted, uint256 voteStart, uint256 voteEnd, uint256 yesVotes, uint256 noVotes)",
    "function verifyUser(address wallet, bool verified)",
    "function voteForVerifier(address verifier, bool support)"
  ],
  "adminUser": {
    "address": "0x9969EcB5247EC3a5810FBFC82084D0301a3C8c98",
    "role": "admin",
    "country": "Global",
    "documents": [
      "admin_verification.pdf"
    ]
  }
}